// source: protobuf.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.mypackage.ListMusicasPlaylistRequest', null, global);
goog.exportSymbol('proto.mypackage.ListMusicasPlaylistResponse', null, global);
goog.exportSymbol('proto.mypackage.ListMusicasRequest', null, global);
goog.exportSymbol('proto.mypackage.ListMusicasResponse', null, global);
goog.exportSymbol('proto.mypackage.ListPlaylistsPorMusicaRequest', null, global);
goog.exportSymbol('proto.mypackage.ListPlaylistsPorMusicaResponse', null, global);
goog.exportSymbol('proto.mypackage.ListPlaylistsUsuarioRequest', null, global);
goog.exportSymbol('proto.mypackage.ListPlaylistsUsuarioResponse', null, global);
goog.exportSymbol('proto.mypackage.ListUsuariosRequest', null, global);
goog.exportSymbol('proto.mypackage.ListUsuariosResponse', null, global);
goog.exportSymbol('proto.mypackage.Musica', null, global);
goog.exportSymbol('proto.mypackage.Playlist', null, global);
goog.exportSymbol('proto.mypackage.Usuario', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListUsuariosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.ListUsuariosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListUsuariosRequest.displayName = 'proto.mypackage.ListUsuariosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListUsuariosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mypackage.ListUsuariosResponse.repeatedFields_, null);
};
goog.inherits(proto.mypackage.ListUsuariosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListUsuariosResponse.displayName = 'proto.mypackage.ListUsuariosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.Usuario = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.Usuario, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.Usuario.displayName = 'proto.mypackage.Usuario';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListMusicasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.ListMusicasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListMusicasRequest.displayName = 'proto.mypackage.ListMusicasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListMusicasResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mypackage.ListMusicasResponse.repeatedFields_, null);
};
goog.inherits(proto.mypackage.ListMusicasResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListMusicasResponse.displayName = 'proto.mypackage.ListMusicasResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.Musica = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.Musica, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.Musica.displayName = 'proto.mypackage.Musica';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListPlaylistsUsuarioRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.ListPlaylistsUsuarioRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListPlaylistsUsuarioRequest.displayName = 'proto.mypackage.ListPlaylistsUsuarioRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListPlaylistsUsuarioResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mypackage.ListPlaylistsUsuarioResponse.repeatedFields_, null);
};
goog.inherits(proto.mypackage.ListPlaylistsUsuarioResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListPlaylistsUsuarioResponse.displayName = 'proto.mypackage.ListPlaylistsUsuarioResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.Playlist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.Playlist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.Playlist.displayName = 'proto.mypackage.Playlist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListMusicasPlaylistRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.ListMusicasPlaylistRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListMusicasPlaylistRequest.displayName = 'proto.mypackage.ListMusicasPlaylistRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListMusicasPlaylistResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mypackage.ListMusicasPlaylistResponse.repeatedFields_, null);
};
goog.inherits(proto.mypackage.ListMusicasPlaylistResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListMusicasPlaylistResponse.displayName = 'proto.mypackage.ListMusicasPlaylistResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListPlaylistsPorMusicaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mypackage.ListPlaylistsPorMusicaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListPlaylistsPorMusicaRequest.displayName = 'proto.mypackage.ListPlaylistsPorMusicaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mypackage.ListPlaylistsPorMusicaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mypackage.ListPlaylistsPorMusicaResponse.repeatedFields_, null);
};
goog.inherits(proto.mypackage.ListPlaylistsPorMusicaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mypackage.ListPlaylistsPorMusicaResponse.displayName = 'proto.mypackage.ListPlaylistsPorMusicaResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListUsuariosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListUsuariosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListUsuariosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListUsuariosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListUsuariosRequest}
 */
proto.mypackage.ListUsuariosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListUsuariosRequest;
  return proto.mypackage.ListUsuariosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListUsuariosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListUsuariosRequest}
 */
proto.mypackage.ListUsuariosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListUsuariosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListUsuariosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListUsuariosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListUsuariosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mypackage.ListUsuariosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListUsuariosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListUsuariosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListUsuariosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListUsuariosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usuariosList: jspb.Message.toObjectList(msg.getUsuariosList(),
    proto.mypackage.Usuario.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListUsuariosResponse}
 */
proto.mypackage.ListUsuariosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListUsuariosResponse;
  return proto.mypackage.ListUsuariosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListUsuariosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListUsuariosResponse}
 */
proto.mypackage.ListUsuariosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mypackage.Usuario;
      reader.readMessage(value,proto.mypackage.Usuario.deserializeBinaryFromReader);
      msg.addUsuarios(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListUsuariosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListUsuariosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListUsuariosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListUsuariosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsuariosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mypackage.Usuario.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Usuario usuarios = 1;
 * @return {!Array<!proto.mypackage.Usuario>}
 */
proto.mypackage.ListUsuariosResponse.prototype.getUsuariosList = function() {
  return /** @type{!Array<!proto.mypackage.Usuario>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mypackage.Usuario, 1));
};


/**
 * @param {!Array<!proto.mypackage.Usuario>} value
 * @return {!proto.mypackage.ListUsuariosResponse} returns this
*/
proto.mypackage.ListUsuariosResponse.prototype.setUsuariosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mypackage.Usuario=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mypackage.Usuario}
 */
proto.mypackage.ListUsuariosResponse.prototype.addUsuarios = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mypackage.Usuario, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mypackage.ListUsuariosResponse} returns this
 */
proto.mypackage.ListUsuariosResponse.prototype.clearUsuariosList = function() {
  return this.setUsuariosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.Usuario.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.Usuario.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.Usuario} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.Usuario.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nome: jspb.Message.getFieldWithDefault(msg, 2, ""),
    idade: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.Usuario}
 */
proto.mypackage.Usuario.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.Usuario;
  return proto.mypackage.Usuario.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.Usuario} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.Usuario}
 */
proto.mypackage.Usuario.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNome(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.Usuario.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.Usuario.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.Usuario} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.Usuario.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNome();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdade();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.mypackage.Usuario.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.Usuario} returns this
 */
proto.mypackage.Usuario.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string nome = 2;
 * @return {string}
 */
proto.mypackage.Usuario.prototype.getNome = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mypackage.Usuario} returns this
 */
proto.mypackage.Usuario.prototype.setNome = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 idade = 3;
 * @return {number}
 */
proto.mypackage.Usuario.prototype.getIdade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.Usuario} returns this
 */
proto.mypackage.Usuario.prototype.setIdade = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListMusicasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListMusicasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListMusicasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListMusicasRequest}
 */
proto.mypackage.ListMusicasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListMusicasRequest;
  return proto.mypackage.ListMusicasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListMusicasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListMusicasRequest}
 */
proto.mypackage.ListMusicasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListMusicasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListMusicasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListMusicasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mypackage.ListMusicasResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListMusicasResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListMusicasResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListMusicasResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    musicasList: jspb.Message.toObjectList(msg.getMusicasList(),
    proto.mypackage.Musica.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListMusicasResponse}
 */
proto.mypackage.ListMusicasResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListMusicasResponse;
  return proto.mypackage.ListMusicasResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListMusicasResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListMusicasResponse}
 */
proto.mypackage.ListMusicasResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mypackage.Musica;
      reader.readMessage(value,proto.mypackage.Musica.deserializeBinaryFromReader);
      msg.addMusicas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListMusicasResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListMusicasResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListMusicasResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMusicasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mypackage.Musica.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Musica musicas = 1;
 * @return {!Array<!proto.mypackage.Musica>}
 */
proto.mypackage.ListMusicasResponse.prototype.getMusicasList = function() {
  return /** @type{!Array<!proto.mypackage.Musica>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mypackage.Musica, 1));
};


/**
 * @param {!Array<!proto.mypackage.Musica>} value
 * @return {!proto.mypackage.ListMusicasResponse} returns this
*/
proto.mypackage.ListMusicasResponse.prototype.setMusicasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mypackage.Musica=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mypackage.Musica}
 */
proto.mypackage.ListMusicasResponse.prototype.addMusicas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mypackage.Musica, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mypackage.ListMusicasResponse} returns this
 */
proto.mypackage.ListMusicasResponse.prototype.clearMusicasList = function() {
  return this.setMusicasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.Musica.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.Musica.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.Musica} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.Musica.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nome: jspb.Message.getFieldWithDefault(msg, 2, ""),
    artista: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.Musica}
 */
proto.mypackage.Musica.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.Musica;
  return proto.mypackage.Musica.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.Musica} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.Musica}
 */
proto.mypackage.Musica.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNome(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtista(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.Musica.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.Musica.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.Musica} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.Musica.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNome();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArtista();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.mypackage.Musica.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.Musica} returns this
 */
proto.mypackage.Musica.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string nome = 2;
 * @return {string}
 */
proto.mypackage.Musica.prototype.getNome = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mypackage.Musica} returns this
 */
proto.mypackage.Musica.prototype.setNome = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string artista = 3;
 * @return {string}
 */
proto.mypackage.Musica.prototype.getArtista = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mypackage.Musica} returns this
 */
proto.mypackage.Musica.prototype.setArtista = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListPlaylistsUsuarioRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListPlaylistsUsuarioRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListPlaylistsUsuarioRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsUsuarioRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idUsuario: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListPlaylistsUsuarioRequest}
 */
proto.mypackage.ListPlaylistsUsuarioRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListPlaylistsUsuarioRequest;
  return proto.mypackage.ListPlaylistsUsuarioRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListPlaylistsUsuarioRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListPlaylistsUsuarioRequest}
 */
proto.mypackage.ListPlaylistsUsuarioRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdUsuario(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListPlaylistsUsuarioRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListPlaylistsUsuarioRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListPlaylistsUsuarioRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsUsuarioRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdUsuario();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id_usuario = 1;
 * @return {number}
 */
proto.mypackage.ListPlaylistsUsuarioRequest.prototype.getIdUsuario = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.ListPlaylistsUsuarioRequest} returns this
 */
proto.mypackage.ListPlaylistsUsuarioRequest.prototype.setIdUsuario = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mypackage.ListPlaylistsUsuarioResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListPlaylistsUsuarioResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListPlaylistsUsuarioResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListPlaylistsUsuarioResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsUsuarioResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    playlistsList: jspb.Message.toObjectList(msg.getPlaylistsList(),
    proto.mypackage.Playlist.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListPlaylistsUsuarioResponse}
 */
proto.mypackage.ListPlaylistsUsuarioResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListPlaylistsUsuarioResponse;
  return proto.mypackage.ListPlaylistsUsuarioResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListPlaylistsUsuarioResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListPlaylistsUsuarioResponse}
 */
proto.mypackage.ListPlaylistsUsuarioResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mypackage.Playlist;
      reader.readMessage(value,proto.mypackage.Playlist.deserializeBinaryFromReader);
      msg.addPlaylists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListPlaylistsUsuarioResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListPlaylistsUsuarioResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListPlaylistsUsuarioResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsUsuarioResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylistsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mypackage.Playlist.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Playlist playlists = 1;
 * @return {!Array<!proto.mypackage.Playlist>}
 */
proto.mypackage.ListPlaylistsUsuarioResponse.prototype.getPlaylistsList = function() {
  return /** @type{!Array<!proto.mypackage.Playlist>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mypackage.Playlist, 1));
};


/**
 * @param {!Array<!proto.mypackage.Playlist>} value
 * @return {!proto.mypackage.ListPlaylistsUsuarioResponse} returns this
*/
proto.mypackage.ListPlaylistsUsuarioResponse.prototype.setPlaylistsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mypackage.Playlist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mypackage.Playlist}
 */
proto.mypackage.ListPlaylistsUsuarioResponse.prototype.addPlaylists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mypackage.Playlist, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mypackage.ListPlaylistsUsuarioResponse} returns this
 */
proto.mypackage.ListPlaylistsUsuarioResponse.prototype.clearPlaylistsList = function() {
  return this.setPlaylistsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.Playlist.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.Playlist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.Playlist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.Playlist.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nome: jspb.Message.getFieldWithDefault(msg, 2, ""),
    idUsuario: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.Playlist}
 */
proto.mypackage.Playlist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.Playlist;
  return proto.mypackage.Playlist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.Playlist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.Playlist}
 */
proto.mypackage.Playlist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNome(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdUsuario(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.Playlist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.Playlist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.Playlist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.Playlist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNome();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdUsuario();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.mypackage.Playlist.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.Playlist} returns this
 */
proto.mypackage.Playlist.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string nome = 2;
 * @return {string}
 */
proto.mypackage.Playlist.prototype.getNome = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mypackage.Playlist} returns this
 */
proto.mypackage.Playlist.prototype.setNome = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 id_usuario = 3;
 * @return {number}
 */
proto.mypackage.Playlist.prototype.getIdUsuario = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.Playlist} returns this
 */
proto.mypackage.Playlist.prototype.setIdUsuario = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListMusicasPlaylistRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListMusicasPlaylistRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListMusicasPlaylistRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasPlaylistRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idPlaylist: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListMusicasPlaylistRequest}
 */
proto.mypackage.ListMusicasPlaylistRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListMusicasPlaylistRequest;
  return proto.mypackage.ListMusicasPlaylistRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListMusicasPlaylistRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListMusicasPlaylistRequest}
 */
proto.mypackage.ListMusicasPlaylistRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdPlaylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListMusicasPlaylistRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListMusicasPlaylistRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListMusicasPlaylistRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasPlaylistRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdPlaylist();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id_playlist = 1;
 * @return {number}
 */
proto.mypackage.ListMusicasPlaylistRequest.prototype.getIdPlaylist = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.ListMusicasPlaylistRequest} returns this
 */
proto.mypackage.ListMusicasPlaylistRequest.prototype.setIdPlaylist = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mypackage.ListMusicasPlaylistResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListMusicasPlaylistResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListMusicasPlaylistResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListMusicasPlaylistResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasPlaylistResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    musicasList: jspb.Message.toObjectList(msg.getMusicasList(),
    proto.mypackage.Musica.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListMusicasPlaylistResponse}
 */
proto.mypackage.ListMusicasPlaylistResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListMusicasPlaylistResponse;
  return proto.mypackage.ListMusicasPlaylistResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListMusicasPlaylistResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListMusicasPlaylistResponse}
 */
proto.mypackage.ListMusicasPlaylistResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mypackage.Musica;
      reader.readMessage(value,proto.mypackage.Musica.deserializeBinaryFromReader);
      msg.addMusicas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListMusicasPlaylistResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListMusicasPlaylistResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListMusicasPlaylistResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListMusicasPlaylistResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMusicasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mypackage.Musica.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Musica musicas = 1;
 * @return {!Array<!proto.mypackage.Musica>}
 */
proto.mypackage.ListMusicasPlaylistResponse.prototype.getMusicasList = function() {
  return /** @type{!Array<!proto.mypackage.Musica>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mypackage.Musica, 1));
};


/**
 * @param {!Array<!proto.mypackage.Musica>} value
 * @return {!proto.mypackage.ListMusicasPlaylistResponse} returns this
*/
proto.mypackage.ListMusicasPlaylistResponse.prototype.setMusicasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mypackage.Musica=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mypackage.Musica}
 */
proto.mypackage.ListMusicasPlaylistResponse.prototype.addMusicas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mypackage.Musica, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mypackage.ListMusicasPlaylistResponse} returns this
 */
proto.mypackage.ListMusicasPlaylistResponse.prototype.clearMusicasList = function() {
  return this.setMusicasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListPlaylistsPorMusicaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListPlaylistsPorMusicaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idMusica: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListPlaylistsPorMusicaRequest}
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListPlaylistsPorMusicaRequest;
  return proto.mypackage.ListPlaylistsPorMusicaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListPlaylistsPorMusicaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListPlaylistsPorMusicaRequest}
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdMusica(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListPlaylistsPorMusicaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListPlaylistsPorMusicaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdMusica();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id_musica = 1;
 * @return {number}
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.prototype.getIdMusica = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mypackage.ListPlaylistsPorMusicaRequest} returns this
 */
proto.mypackage.ListPlaylistsPorMusicaRequest.prototype.setIdMusica = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mypackage.ListPlaylistsPorMusicaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mypackage.ListPlaylistsPorMusicaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    playlistsList: jspb.Message.toObjectList(msg.getPlaylistsList(),
    proto.mypackage.Playlist.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mypackage.ListPlaylistsPorMusicaResponse}
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mypackage.ListPlaylistsPorMusicaResponse;
  return proto.mypackage.ListPlaylistsPorMusicaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mypackage.ListPlaylistsPorMusicaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mypackage.ListPlaylistsPorMusicaResponse}
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mypackage.Playlist;
      reader.readMessage(value,proto.mypackage.Playlist.deserializeBinaryFromReader);
      msg.addPlaylists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mypackage.ListPlaylistsPorMusicaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mypackage.ListPlaylistsPorMusicaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylistsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mypackage.Playlist.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Playlist playlists = 1;
 * @return {!Array<!proto.mypackage.Playlist>}
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.prototype.getPlaylistsList = function() {
  return /** @type{!Array<!proto.mypackage.Playlist>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mypackage.Playlist, 1));
};


/**
 * @param {!Array<!proto.mypackage.Playlist>} value
 * @return {!proto.mypackage.ListPlaylistsPorMusicaResponse} returns this
*/
proto.mypackage.ListPlaylistsPorMusicaResponse.prototype.setPlaylistsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mypackage.Playlist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mypackage.Playlist}
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.prototype.addPlaylists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mypackage.Playlist, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mypackage.ListPlaylistsPorMusicaResponse} returns this
 */
proto.mypackage.ListPlaylistsPorMusicaResponse.prototype.clearPlaylistsList = function() {
  return this.setPlaylistsList([]);
};


goog.object.extend(exports, proto.mypackage);
